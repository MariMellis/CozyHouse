import React, {useState, useEffect, useRef} from 'react';
import { Link } from 'react-router-dom'; // –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å—Å—ã–ª–∫–∞–º–∏ (Link), –º–∞—Ä—à—Ä—É—Ç–∞–º–∏ –∏ DOM - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
import Logo from './logo.png'; // –ª–æ–≥–æ—Ç–∏–ø –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

{/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ Header - "—à–∞–ø–∫–∞ —Å–∞–π—Ç–∞". –¢–∞–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è */}

const Header = ({ token, username, handleLogout }) => {

  const [isDropdownOpen, setIsDropdownOpen] = useState(false);
  const dropdownRef = useRef(null);

  const toggleDropdown = () => {
      setIsDropdownOpen(prev => !prev);
  };

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
  useEffect(() => {
      const handleClickOutside = (event) => {
          if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
              setIsDropdownOpen(false);
          }
      };
      document.addEventListener('mousedown', handleClickOutside);
      return () => {
          document.removeEventListener('mousedown', handleClickOutside);
      };
  }, []);

    return (
      <header className="App-header">
        <div className="container">
          <div className="logo">
            <a href="/">
              {/* –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –ª–æ–≥–æ—Ç–∏–ø */}
              <img src={Logo} alt="–õ–æ–≥–æ—Ç–∏–ø" className="logo" />
            </a>
          </div>
          {/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å (–∞–Ω–≥–ª. - navbar) */}
          <nav>
            <ul className="nav-links">
              <Link to="/" className="nav-link">–ì–ª–∞–≤–Ω–∞—è</Link>
              <Link to="/diy_projects" className="nav-link">DIY-–ø—Ä–æ–µ–∫—Ç—ã</Link>
              <Link to="/about" className="nav-link">–û –Ω–∞—Å</Link>
              <Link to="/contacts" className="nav-link">–ö–æ–Ω—Ç–∞–∫—Ç—ã</Link>
            </ul>
          </nav>
          {/* –ü–æ–ª–µ –¥–ª—è –≤—Ö–æ–¥–∞ / —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ / –≤—ã–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
          <div className="login">
            {/* –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–º—É –º–µ–Ω—é */}
            {token ? (
              <div className="dropdown" ref={dropdownRef}>
              <span className="username" onClick={toggleDropdown}>üëã –ü—Ä–∏–≤–µ—Ç, {username}!</span>
              {isDropdownOpen && (
                <div className="dropdown-menu">
                  <Link to="/settings" className="dropdown-item">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</Link>
                  <Link to="/my-experiments" className="dropdown-item">–ú–æ–∏ DIY-–ø—Ä–æ–µ–∫—Ç—ã</Link>
                  <button className="dropdown-item" onClick={handleLogout}>–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</button>
                </div>
              )}
            </div>
            ) : (
              
              <Link to="/login">
                {/* –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –≤–æ—à–µ–ª, —Ç–æ –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–º—É –º–µ–Ω—é, –∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞ */}
                <button className="login-btn"><b>–í–•–û–î / –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø</b></button>
              </Link>
            )}
          </div>
        </div>
      </header>
    );
  };
  
export default Header;