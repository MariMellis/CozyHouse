// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ Express.js.
// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã: node server.js

const express = require('express'); // –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–º Express.js (–¥–ª—è backend)
const bodyParser = require('body-parser'); // –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–∑–±–æ—Ä–∞ —Ç–µ–ª–∞ –≤—Ö–æ–¥—è—â–∏—Ö HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤
const mongoose = require('mongoose'); // –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –°–£–ë–î MongoDB
const cors = require('cors'); // –º–µ—Ö–∞–Ω–∏–∑–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–µ—Å—É—Ä—Å–æ–≤, –∫ –∫–æ—Ç–æ—Ä—ã–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø.
const connectDB = require('./config/db'); // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –ë–î MongoDB
const path = require('path'); // –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—É—Ç—è–º–∏
const fs = require('fs'); // —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π

const app = express(); // –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
connectDB(); // –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ 'uploads' (–µ—Å–ª–∏ —Ç–∞–∫–æ–π –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –Ω–µ—Ç)
const uploadDir = path.join(__dirname, 'uploads');
if (!fs.existsSync(uploadDir)) {
    fs.mkdirSync(uploadDir, { recursive: true });
}

app.use(cors());
app.use(bodyParser.json());
app.use(express.json());

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã
app.use('/auth', require('./routes/auth'));
app.use('/diy_projects', require('./routes/diy_projects'));
app.use('/comments', require('./routes/comments'));
app.use('/uploads', express.static(path.join(__dirname, 'uploads')));

app.use(bodyParser.urlencoded({ extended: true }));

// –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞. –í—ã–≤–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –∫—Ä–∞—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
app.get('/', (req, res) => {
  const uptime = process.uptime().toFixed(0);
  const nodeVersion = process.version;

  res.send(`
    <!DOCTYPE html>
    <html>
    <head>
      <title>Server is working!</title>
      <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
      <style>
        body { font-family: Arial, sans-serif; text-align: center; background: #f4f4f4; margin: 0; padding: 20px; }
        h1 { color: #4CAF50; }
        .card { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); margin: 20px auto; width: 80%; }
      </style>
    </head>
    <body>
      <h1>üöÄ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!</h1>
      <div class="card">
        <p><strong>Node.js –≤–µ—Ä—Å–∏—è:</strong> ${nodeVersion}</p>
        <p><strong>–ê–ø—Ç–∞–π–º:</strong> ${uptime} —Å–µ–∫—É–Ω–¥</p>
        <canvas id="loadChart" width="400" height="200"></canvas>
      </div>
    </body>
    </html>
  `);
});

// –í—ã–≤–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–± –æ—à–∏–±–∫–µ 404, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å
app.use((req, res) => {
  res.status(404).sendFile(path.join(__dirname, 'views', '404.html'));
});

// –ó–∞–¥–∞–µ–º –ø–æ—Ä—Ç –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 1234;

//–í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞, –µ—Å–ª–∏ –≤—Å–µ –û–ö
app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});